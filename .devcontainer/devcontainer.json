// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
	"name": "Rust",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/rust:1-1-bullseye",
	"features": {
		"ghcr.io/devcontainers/features/azure-cli:1": {},
		"ghcr.io/jlaundry/devcontainer-features/azure-functions-core-tools:1": {}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"rust-lang.rust-analyzer",
				"tamasfe.even-better-toml",
				"GitHub.copilot-chat",
				"ms-vscode.vscode-node-azure-pack",
				"ms-azuretools.vscode-azurefunctions",
				"PKief.material-icon-theme"
			],
			"settings": {
				"workbench.preferredDarkColorTheme": "Default Dark Modern",
				"workbench.colorTheme": "Default Dark Modern",
				"workbench.iconTheme": "material-icon-theme",
				"files.autoSave": "afterDelay",
				"files.autoSaveDelay": 500
			}
		}
	},

	// Use 'mounts' to make the cargo cache persistent in a Docker Volume.
	// "mounts": [
	// 	{
	// 		"source": "devcontainer-cargo-cache-${devcontainerId}",
	// 		"target": "/usr/local/cargo",
	// 		"type": "volume"
	// 	}
	// ]

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "rustc --version",
	"postCreateCommand": "cargo install cargo-make",

	"portsAttributes": {
		"3000": {
		  "label": "Application",
		  "onAutoForward": "openPreview"
		}
	  }
	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
